{% block stylesheets %}
    <style>
        /* Styles généraux de la page */
        body {
            background-color: #f8f9fa;
            font-family: 'Montserrat', sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .site-header {
            background-color: #3498db;
            padding: 100px 0;
            color: white;
        }

        .site-header h2 {
            font-size: 2.5rem;
            font-weight: 700;
        }

        .topics-detail-block {
            border-radius: 12px;
            overflow: hidden;
        }

        .topics-detail-block img {
            width: 100%;
            height: auto;
        }

        /* Styles du formulaire */
        .custom-form {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            max-width: 800px;
            margin: 40px auto;
        }

        .custom-form:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

        .form-floating {
            margin-bottom: 1.5rem;
        }

        .form-floating .form-control {
            border-radius: 8px;
            padding: 1rem;
            border: 1px solid #ddd;
            background-color: #f8f9fa;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .form-floating .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 5px rgba(52, 152, 219, 0.2);
            outline: none;
        }

        .form-floating label {
            color: #666;
            font-size: 0.9rem;
        }

        .form-floating textarea {
            resize: vertical;
            min-height: 120px;
        }

        /* Styles pour les messages d'erreur */
        .error-message {
            color: #dc3545; /* Rouge pour les erreurs */
            font-size: 0.875rem; /* Taille de police plus petite */
            margin-top: 0.25rem; /* Espace au-dessus du message */
            display: none; /* Masqué par défaut */
        }

        .is-invalid {
            border-color: #dc3545 !important; /* Bordure rouge pour les champs invalides */
        }

        /* Styles pour le bouton de retour */
        .back-btn {
            background-color: var(--primary-color);
            border: 0;
            border-radius: var(--border-radius-large) !important;
            color: var(--white-color);
            max-width: 150px;
            padding: 10px 20px;
            text-align: center;
            display: inline-block;
            text-decoration: none;
            margin: 20px auto;
        }

        /* Ajustements pour les écrans mobiles */
        @media (max-width: 768px) {
            .custom-form {
                padding: 20px;
            }

            .form-floating .form-control {
                padding: 10px;
            }

            button.btn {
                padding: 10px 20px;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <main>
        <!-- En-tête de la page -->
        <header class="site-header d-flex flex-column justify-content-center align-items-center">
            <div class="container">
                <div class="row justify-content-center align-items-center">
                    <div class="col-lg-5 col-12 mb-5">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="{{ path('app_livre_index') }}">Bibliothèque</a></li>
                                <li class="breadcrumb-item active" aria-current="page">Créer un Livre</li>
                            </ol>
                        </nav>

                        <div class="d-flex align-items-center mt-5">
                            <a href="#livre-form" class="btn custom-btn custom-border-btn smoothscroll me-4">Créer un Livre</a>
                            <a href="#top" class="custom-icon bi-bookmark smoothscroll"></a>
                        </div>
                    </div>

                    <div class="col-lg-5 col-12">
                        <div class="topics-detail-block bg-white shadow-lg">
                            <div class="topics-detail-block-image img-fluid bg-light d-flex align-items-center justify-content-center">
                                <img id="imagePreview" src="#" alt="Aperçu" style="display: none; max-width: 100%; max-height: 100%;" />
                                <p class="text-muted" id="noImageText">Aucune image</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <!-- Section du formulaire de création de livre -->
        <section class="section-padding section-bg" id="livre-form">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-12 m-auto">
                        {{ form_start(form, {'attr': {'class': 'custom-form contact-form', 'role': 'form', 'novalidate': 'novalidate'}}) }}
                            <div class="row">
                                <!-- Champ Titre -->
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.titre, {'attr': {'class': 'form-control', 'placeholder': 'Titre', 'required': 'required'}}) }}
                                        {{ form_label(form.titre, 'Titre', {'label_attr': {'class': 'form-label'}}) }}
                                        <div class="error-message"></div> <!-- Message d'erreur pour le titre -->
                                    </div>
                                </div>

                                <!-- Champ Auteur -->
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.auteur, {'attr': {'class': 'form-control', 'placeholder': 'Auteur', 'required': 'required'}}) }}
                                        {{ form_label(form.auteur, 'Auteur', {'label_attr': {'class': 'form-label'}}) }}
                                        <div class="error-message"></div> <!-- Message d'erreur pour l'auteur -->
                                    </div>
                                </div>

                                <!-- Champ Description -->
                                <div class="col-lg-12 col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description', 'required': 'required', 'style': 'height: 150px;'}}) }}
                                        {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                                        <div class="error-message"></div> <!-- Message d'erreur pour la description -->
                                    </div>
                                </div>

                                <!-- Champ FichierUrl -->
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.fichierUrl, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
                                        {{ form_label(form.fichierUrl, 'Télécharger le fichier du livre', {'label_attr': {'class': 'form-label'}}) }}
                                        <div class="error-message"></div> <!-- Message d'erreur pour le fichier -->
                                    </div>
                                </div>

                                <!-- Champ Image de Couverture -->
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.imageCouverture, {'attr': {'class': 'form-control', 'onchange': 'previewImage(event)', 'accept': 'image/*'}}) }}
                                        {{ form_label(form.imageCouverture, 'Image de couverture', {'label_attr': {'class': 'form-label'}}) }}
                                        <div class="error-message"></div> <!-- Message d'erreur pour l'image -->
                                    </div>
                                </div>

                                <!-- Champ Genre -->
                                <div class="col-lg-6 col-md-6 col-12">
                                    <div class="form-floating">
                                        {{ form_widget(form.genre, {'attr': {'class': 'form-control', 'placeholder': 'Genre', 'required': 'required'}}) }}
                                        {{ form_label(form.genre, 'Genre', {'label_attr': {'class': 'form-label'}}) }}
                                        <div class="error-message"></div> <!-- Message d'erreur pour le genre -->
                                    </div>
                                </div>

                                <!-- Bouton de soumission -->
                                <div class="col-lg-4 col-12 ms-auto">
                                    <button type="submit" id="submitBtn" class="form-control">{{ button_label|default('Créer') }}</button>
                                </div>
                            </div>
                        {{ form_end(form) }}

                        <!-- Bouton de retour à la liste -->
                        <div class="col-lg-4 col-12 ms-auto">
                            <a href="{{ path('app_livre_index') }}" class="back-btn">Retour</a>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
{% endblock %}

{% block javascripts %}
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const form = document.querySelector("form");

            // Empêcher la soumission du formulaire s'il y a des erreurs
            form.addEventListener("submit", function(event) {
                if (!validateForm()) {
                    event.preventDefault(); // Empêcher la soumission s'il y a des erreurs
                }
            });

            // Valider le formulaire
            function validateForm() {
                let formValid = true;

                // Valider chaque champ
                form.querySelectorAll("input, textarea, select").forEach(input => {
                    const errorDiv = input.parentElement.querySelector(".error-message");

                    // Effacer les erreurs précédentes
                    clearError(input);

                    // Vérifier les champs obligatoires
                    if (input.hasAttribute("required") && !input.value.trim() && !input.files?.length) {
                        formValid = false;
                        showError(input, "Ce champ est obligatoire.");
                    }

                    // Valider le Titre (max 20 caractères)
                    if (input.name === "livre[titre]" && input.value.length > 20) {
                        formValid = false;
                        showError(input, "Le titre ne doit pas dépasser 20 caractères.");
                    }

                    // Valider l'Auteur (max 30 caractères)
                    if (input.name === "livre[auteur]") {
                        const regex = /^[a-zA-ZÀ-ÿ\s]+$/; // Regex pour les lettres et espaces
                        if (input.value.length > 30) {
                            formValid = false;
                            showError(input, "L'auteur ne doit pas dépasser 30 caractères.");
                        } else if (!regex.test(input.value)) {
                            formValid = false;
                            showError(input, "L'auteur ne doit contenir que des lettres et des espaces.");
                        }
                    }

                    // Valider la Description (min 20 caractères)
                    if (input.name === "livre[description]" && input.value.length < 20) {
                        formValid = false;
                        showError(input, "La description doit contenir au moins 20 caractères.");
                    }

                    // Valider FichierUrl (PDF ou EPUB)
                    if (input.name === "livre[fichierUrl]") {
                        if (!input.files[0]) {
                            formValid = false;
                            showError(input, "Le fichier est obligatoire.");
                        } else {
                            const file = input.files[0];
                            const validTypes = ["application/pdf", "application/epub+zip"];
                            if (!validTypes.includes(file.type)) {
                                formValid = false;
                                showError(input, "Veuillez télécharger un fichier PDF ou EPUB valide.");
                            }
                        }
                    }

                    // Valider ImageCouverture (JPG ou PNG, max 5MB)
                    if (input.name === "livre[imageCouverture]") {
                        if (!input.files[0]) {
                            formValid = false;
                            showError(input, "L'image de couverture est obligatoire.");
                        } else {
                            const file = input.files[0];
                            const validTypes = ["image/jpeg", "image/png"];
                            const maxSize = 5 * 1024 * 1024; // 5MB

                            if (!validTypes.includes(file.type)) {
                                formValid = false;
                                showError(input, "Veuillez télécharger une image valide (JPG/PNG).");
                            } else if (file.size > maxSize) {
                                formValid = false;
                                showError(input, "La taille de l'image ne doit pas dépasser 5MB.");
                            }
                        }
                    }
                });

                return formValid; // Retourner true si le formulaire est valide, sinon false
            }

            // Afficher un message d'erreur
            function showError(input, message) {
                const errorDiv = input.parentElement.querySelector(".error-message");
                if (errorDiv) {
                    errorDiv.textContent = message;
                    errorDiv.style.display = "block"; // Afficher le message d'erreur
                    input.classList.add("is-invalid"); // Ajouter une bordure rouge
                }
            }

            // Effacer un message d'erreur
            function clearError(input) {
                const errorDiv = input.parentElement.querySelector(".error-message");
                if (errorDiv) {
                    errorDiv.textContent = "";
                    errorDiv.style.display = "none"; // Masquer le message d'erreur
                    input.classList.remove("is-invalid"); // Retirer la bordure rouge
                }
            }

            // Prévisualiser l'image
            function previewImage(event) {
                const imagePreview = document.getElementById('imagePreview');
                const noImageText = document.getElementById('noImageText');
                const file = event.target.files[0];

                if (file) {
                    const reader = new FileReader();

                    reader.onload = function(e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block'; // Afficher l'image
                        noImageText.style.display = 'none'; // Masquer le texte "Aucune image"
                    };

                    reader.readAsDataURL(file); // Convertir le fichier en base64
                } else {
                    imagePreview.style.display = 'none'; // Masquer l'image si aucun fichier
                    noImageText.style.display = 'block'; // Afficher le texte "Aucune image"
                }
            }

            // Ajouter un écouteur d'événement au champ d'image
            const imageInput = document.querySelector('input[name="livre[imageCouverture]"]');
            if (imageInput) {
                imageInput.addEventListener('change', previewImage);
            }
        });
    </script>
{% endblock %}