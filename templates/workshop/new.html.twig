{% extends 'base3.html.twig' %}



    {% block header %}
        <a href="{{ path('workshop_index') }}" class="btn btn-secondary mt-3">Retour</a>
        <h2 class="text-white">Créer un nouveau Workshop</h2>
    {% endblock %}

    
  {% block body %}
  <div class="form-container">


    {{ form_start(form, {'attr': {'enctype': 'multipart/form-data'}}) }}

    <div class="form-group">
        {{ form_label(form.titre) }}
        {{ form_widget(form.titre, {'attr': {'class': 'form-control'}}) }}
        <!-- Affichage des erreurs juste devant le champ -->
        <div class="error-message">
            {{ form_errors(form.titre) }}
        </div>
    </div>

    <div class="form-group">
        {{ form_label(form.description) }}
        {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
        <!-- Affichage des erreurs juste devant le champ -->
        <div class="error-message">
            {{ form_errors(form.description) }}
        </div>
    </div>

    <div class="form-group">
        {{ form_label(form.dateDebut) }}
        {{ form_widget(form.dateDebut, {'attr': {'class': 'form-control'}}) }}
        <!-- Affichage des erreurs juste devant le champ -->
        <div class="error-message">
            {{ form_errors(form.dateDebut) }}
        </div>
    </div>

    <div class="form-group">
        {{ form_label(form.dateFin) }}
        {{ form_widget(form.dateFin, {'attr': {'class': 'form-control'}}) }}
        <!-- Affichage des erreurs juste devant le champ -->
        <div class="error-message">
            {{ form_errors(form.dateFin) }}
        </div>
    </div>

    <div class="form-group">
        {{ form_label(form.categorie) }}
        {{ form_widget(form.categorie, {'attr': {'class': 'form-control'}}) }}
        <!-- Affichage des erreurs juste devant le champ -->
        <div class="error-message">
            {{ form_errors(form.categorie) }}
        </div>
    </div>

    <div class="form-group">
        {{ form_label(form.image) }}
        {{ form_widget(form.image, {'attr': {'class': 'form-control'}}) }}
        <!-- Affichage des erreurs juste devant le champ -->
        <div class="error-message">
            {{ form_errors(form.image) }}
        </div>
    </div>

    <button type="submit" class="btn btn-success">Créer</button>

    {{ form_end(form) }}
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        form.addEventListener('submit', function(event) {
            let errors = [];

            const titre = document.querySelector('#workshop_titre');
            const description = document.querySelector('#workshop_description');
            const dateDebut = new Date(document.querySelector('#workshop_dateDebut').value);
            const dateFin = new Date(document.querySelector('#workshop_dateFin').value);

            // Effacer les erreurs affichées
            const errorElements = document.querySelectorAll('.error-message');
            errorElements.forEach(function(element) {
                element.innerHTML = '';
            });

            // Validation des champs
            if (titre.value.length < 5) {
                errors.push({ field: 'titre', message: "Le titre doit contenir au moins 5 caractères." });
            }

            if (description.value.length < 10) {
                errors.push({ field: 'description', message: "La description doit contenir au moins 10 caractères." });
            }

            if (dateFin <= dateDebut) {
                errors.push({ field: 'dateFin', message: "La date de fin doit être postérieure à la date de début." });
            }

            // Si des erreurs existent, les afficher devant les champs
            if (errors.length > 0) {
                event.preventDefault(); // Bloquer la soumission du formulaire

                errors.forEach(function(error) {
                    const errorContainer = document.querySelector(`#workshop_${error.field}`).parentNode.querySelector('.error-message');
                    if (errorContainer) {
                        errorContainer.innerHTML = error.message;
                    }
                });
            }
        });
    });
  </script>

  {% endblock %}
  